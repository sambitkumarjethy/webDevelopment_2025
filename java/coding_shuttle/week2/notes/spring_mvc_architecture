ðŸŒ± How does Web Server work in Spring Boot?

Client (Browser / Postman)  --->  Request  --->  Server (APIs)
Client <--- Response (APIs) <---  Server

APIs â†’ Application Programming Interface


ðŸŒ± MVC Architecture (Model-View-Controller)

Client Request
     |
     v
+-----------+       +-----------+       +-----------+
|   View    | <---- | Controller| <---- |   Model   |
| (HTML)    |       | (Handles  |       | (Data,    |
|           | ----> | Request)  | ----> | DB Access)|
+-----------+       +-----------+       +-----------+
     |
     v
Client Response

- Model â†’ Application data (communicates with DB)
- Controller â†’ Request processor (business logic)
- View â†’ HTML/Template returned to client


ðŸŒ± Spring MVC (Traditional Flow)

1. Request â†’ DispatcherServlet
2. DispatcherServlet â†’ Handler Mapping (find controller)
3. DispatcherServlet â†’ Handler Adapter
4. Controller executes request
   â†’ Calls Service (Business Logic)
   â†’ Service â†’ Repository â†’ Database
5. Controller returns (Model + View Name)
6. DispatcherServlet â†’ View Resolver
7. DispatcherServlet â†’ View (with Model)
8. Response â†’ Client

Diagram:

Request
   |
   v
+------------------+      +----------------+      +-----------+
| DispatcherServlet| ---> | HandlerMapping | ---> | Controller|
+------------------+      +----------------+      +-----------+
        |                        ^                     |
        |                 +----------------+           |
        |                 | HandlerAdapter |           |
        |                 +----------------+           |
        |                                            (Business Logic)
        |                                             +-----------+
        |                                             |  Service  |
        |                                             +-----------+
        |                                                   |
        |                                             +-----------+
        |                                             |Repository |
        |                                             +-----------+
        |                                                   |
        |                                                 +------+
        |                                                 |  DB  |
        |                                                 +------+
        v
+----------------+
| View Resolver  |
+----------------+
        |
        v
     +-------+
     |  View |
     +-------+
        |
        v
    Response


ðŸŒ± Roles of DispatcherServlet

1. It creates HTTPServletRequest & HTTPServletResponse objects.
2. Delegates request to Handler Mapping.
3. Invokes Controller methods.

ðŸŒ± Roles of Controller

- Validation
- Authentication
- Business Logic
- DB Queries


ðŸŒ± Flow in Spring Boot with REST

Browser/Postman
   â†“
Embedded Tomcat
   â†“
DispatcherServlet
   â†“
HandlerMapping â†’ Which Controller method
   â†“
Controller method returns (POJO/DTO)
   â†“
HTTP Message Converter (JSON)
   â†“
DispatcherServlet writes HTTP Response
   â†“
Client gets JSON


ðŸŒ± 3-Layer Architecture

Client Request
   â†“
Presentation Layer â†’ Handles Request/Response
   â†“
DTO (Data Transfer Object)
   â†“
Service Layer â†’ Business Logic
   â†“
Entity
   â†“
Repository Layer â†’ DB Queries
   â†“
Database
   â†“
Response back to Client
